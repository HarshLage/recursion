int pivot(vector<int>arr, int n,int s,int e)
{
    
    int mid = s + (e - s) / 2;
    if(s>e){
        return -1;
    }
    if(s==e){
        return s;
    }
        if (arr[mid] >= arr[0])
        {
           return pivot(arr,n,mid+1,e);
        }
        else
        {
            return pivot(arr,n,s,mid);
        }  
    
    
}
int binarysearch( vector<int>arr,int s, int e,int k){
  
    int mid = s + (e -s )/2;
        if(s>e){
            return -1;
        }
        if(arr[mid]==k){
            return mid ;

        }

        if(arr[mid]>k){
            return binarysearch(arr,s,mid-1,k);
        }
        else{
            return binarysearch(arr,mid+1,e,k);
        }
   

    

}
int search(vector<int>& arr, int n, int k)
{
    int pivote = pivot( arr,  n,0,arr.size()-1);
    if(arr[pivote]<=k && arr[n-1]>=k){
        return binarysearch(arr,pivote,n-1,k);
    }
    else{
        return binarysearch(arr,0,pivote-1,k);
    }

}
