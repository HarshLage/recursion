class Solution {
public:
    void solve(string digits , vector<string>&ans , int index , string mapping[],string output){
        if(index>=digits.size()){
            ans.push_back(output);
            return;
        }

        int number = digits[index] - '0';//convert string into number
        string value = mapping[number];

        for(int i=0;i<value.size();i++){
            output.push_back(value[i]);//recursion
            solve(digits,ans,index+1,mapping,output);
            output.pop_back();//backtraking
        }
    }
    vector<string> letterCombinations(string digits) {
        
        vector<string>ans;
        if(digits.size()==0){
            return ans;
        }
        string mapping[] = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};

        string output = "";
        int index = 0;
        solve(digits,ans,index,mapping,output);
        return ans;

    }
};
